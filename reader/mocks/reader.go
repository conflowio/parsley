// Code generated by mockery v1.0.0
package mocks

import mock "github.com/stretchr/testify/mock"
import reader "github.com/opsidian/parsley/reader"

// Reader is an autogenerated mock type for the Reader type
type Reader struct {
	mock.Mock
}

// Clone provides a mock function with given fields:
func (_m *Reader) Clone() reader.Reader {
	ret := _m.Called()

	var r0 reader.Reader
	if rf, ok := ret.Get(0).(func() reader.Reader); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(reader.Reader)
		}
	}

	return r0
}

// Cursor provides a mock function with given fields:
func (_m *Reader) Cursor() reader.Position {
	ret := _m.Called()

	var r0 reader.Position
	if rf, ok := ret.Get(0).(func() reader.Position); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(reader.Position)
		}
	}

	return r0
}

// IsEOF provides a mock function with given fields:
func (_m *Reader) IsEOF() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Remaining provides a mock function with given fields:
func (_m *Reader) Remaining() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// String provides a mock function with given fields:
func (_m *Reader) String() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}
